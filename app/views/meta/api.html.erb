<% title "API" %>

<p>Die JSON-API ermöglicht das Steuern des Spiels vom Frontend aus, die URLs können aber auch direkt mit dem Browser getestet werden.</p>
<p>Um zum Beispiel eine Stadt ohne Umweg über das Frontend anzulegen, genügt der folgende Aufruf:</p>
<p><%= link_to create_city_url + "?city[name]=", create_city_path + "?city[name]=", class: :ajax %><strong>*Name der Stadt*</strong></p>
<p>Falls der Aufruf fehlerhaft ist, werden entsprechende Hinweise gegeben.</p>

<h4>API-Übersicht</h4>
<%= action_dump(Actions::api, :ajax).html_safe %>

<h4>Mögliche Gebäudetypen</h4>
(Nur die untergeordneten Typen können genutzt werden, die fett gedruckten dienen zur Gruppierung.)
<ul>
<% @types.each do |supertype, types| %>
  <li class="spaced">
    <strong><%= supertype %></strong>
    <ul>
      <% types.each do |type| %>
        <li class="spaced">
          <%= link_to type, create_building_path(city_id: '*city_id*') + "?building[type]=" + type %>
        </li>
      <% end %>
    </ul>
  </li>
<% end %>
</ul>

<% if current_user.admin? %>
<div class="admin-only">
<h3>Informationen NUR für Administratoren</h3>
<h4>Passwort für /gain</h4>
<p>Das Passwort zum Aufruf der /gain-Funktion lautet:</p>
<p><em><%= Defaults::Worker::password %></em></p>
<p><strong>WICHTIG</strong>: Das Passwort darf nicht weitergegeben werden, denn jeder, der es besitzt, kann /gain ausführen. Manipulationen sind dadurch zwar nicht möglich, durch ständigen Aufruf von /gain kann der Server jedoch sehr einfach lahmgelegt werden.</p>
<p>Um die Funktion direkt aufzurufen, bewege die Maus über diesen Link:</p>
<% gain_link = gain_path(password: Defaults::Worker::password) %>
<p><%= link_to gain_link, gain_link, class: :ajax %></p>
<p>Jedes Mal, wenn /gain ausgeführt wird, werden allen Städten von allen Benutzern neue Ressourcen angerechnet. Die Berechnung der Ressoucen berücksichtigt, wann /gain das letzte Mal aufgerufen wurde. Es ist also egal, ob /gain alle 5 Minuten oder alle 5 Sekunden ausgeführt wird - die Ressourcenberechnung passt sich entsprechend an.</p>
<p>Die Ausgabe von /gain enthält das Feld <em>since_last_gain</em>. Dieses gibt an, wie viele Sekunden seit dem letzten /gain verstrichen sind. Auf Basis dieses Wertes werden dann die neu gewonnenen Ressourcen berechnet. Diese werden als <em>gained_resources</em> für jede Stadt einzeln aufgeführt. (Dies kann zum Debugging genutzt werden.)</p>
<p>Zuletzt wurde /gain vor <strong><%= seconds = Configuration.since_last_gain.round %> <%= if seconds == 1 then "Sekunde" else "Sekunden" end %></strong> aufgerufen.</p>
</div>
<% end %>